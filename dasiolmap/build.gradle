plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.9'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}
checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
group = 'com.dasiolmapserver'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// swagger + springboot 3.x 
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	// compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	
	// h2 database 
	runtimeOnly 'com.h2database:h2'

	// openssl rand -base64 64
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//RedisTemplate
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// invalidation 
	// JSR - 303 표준
	// 컨트롤로에서 dto를 파라미터로 받을 때 데이터의 유효성 체크를 도와주는 lib 
	implementation group: 'org.springframework.boot', name : 'spring-boot-starter-validation'

	// env
	// 보안상 중요한 정보를 github 에 푸시하지 않고 코드에서 참조만 할 수 있도록 
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	
	//open ai
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Elasticesarch 의존성을 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

